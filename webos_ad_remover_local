#!/bin/bash
# WAR - WebOS Ad Removal (Version 1.00)
# WARNING! This script is provided with no warranty, use at your own risk. 
# I have done the best I can to ensure the changes are safe and that they are not permanent.
# To neutralize this script, simply remove the USB and reboot the TV.
# If you want this script to autorun on boot, place it in rootmytv user startup hook directory: /var/lib/webosbrew/init.d/
set -e

############ Begin User Customizable ENV Variables
# Set WAR_ENABLED=false to disable this script.
WAR_ENABLED=true
AI_BOARD_ENABLED=true
RECOMMENDED_ENABLED=true
############ END User Customizable ENV Variables. Advanced users only past this point.

# This is the directory we will mount override files from.
WAR_WORKDIR="/tmp/webos_ad_removal"

# These are the source files that we will copy and modify.
WAR_AI_BOARD_SOURCE="/usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/AIBoard.qml"
WAR_RECOMMENDED_SOURCE="/usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/Recommended.qml"

check_war_enabled() {
    # This can be used to disable the script while keeping it in place. Set WAR_ENABLED to false in the env variables above.
    if [ $WAR_ENABLED = false ]; then
        echo "WAR_ENABLED set to false, exiting."
        rm -fr $WAR_WORKDIR
        exit 1
    fi
}

check_install() {
    # Check if installed. If not do install. If installed run from install location to ensure applying user settings
    if [ ! -f "/var/lib/webosbrew/init.d/webos_ad_remover" ]; then
        echo "WAR script is not installed. Installing."
        curl -s -L https://github.com/nnmdd/war-webos-ad-remover_local/raw/main/webos_ad_remover_local > /var/lib/webosbrew/init.d/webos_ad_remover
        chmod +x /var/lib/webosbrew/init.d/webos_ad_remover
    else
    script_name1=`basename $0`
    script_path1=`dirname $0`
    script_path_with_name="$script_path1/$script_name1"
        if [ "$script_path_with_name" = "/var/lib/webosbrew/init.d/webos_ad_remover" ]; then
            echo "WAR script installed and started from right location, executing."
        else
            echo "Runnning WAR script from right location."
            (/var/lib/webosbrew/init.d/webos_ad_remover)
            exit 1
        fi
    fi
}

check_target_sums() {
    # We check sha512 sum of target files before proceeding. We will be inserting a line of code at a specific line, we do this to ensure
    # there are no unexpected results. Old versions of WebOS or updates may cause files to change, which will break this script.
    case $1 in
    "ai_board")
        WAR_AI_BOARD_SUM="986fb371dd6a8edf5a5fa8479076011c2ad0375533c8aed997cf2d50254737d34b524732d745eafff5294c37bbf5b16d57c5f03b88d547d81eb0c18beb9d01e5  /usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/AIBoard.qml"
        WAR_AI_BOARD_CHECK=$(sha512sum $WAR_AI_BOARD_SOURCE)

        if [ "$WAR_AI_BOARD_SUM" != "$WAR_AI_BOARD_CHECK" ]; then
            echo "Shasum did not match for AIBoard.qml! Script will not proceed!"
            exit 1
        fi
            echo "Checksum matched!"
        ;;
    "recommended")
        WAR_RECOMMENDED_SUM="1f41b67dc3603908c3aece24c9eae6798684f92cbc89ebd4594e0d786a90dddd9aa0c1c84b9a6142f07deb955dbbd5afbe1c6fef6ca29618267caa0920872e16  /usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/Recommended.qml"
        WAR_RECOMMENDED_CHECK=$(sha512sum $WAR_RECOMMENDED_SOURCE)

            if [ "$WAR_RECOMMENDED_SUM" != "$WAR_RECOMMENDED_CHECK" ]; then
                echo "Shasum did not match for Recommended.qml! Script will not proceed!"
                exit 1
            fi
            echo "Checksum matched!"
        ;;
    *)
        echo "Attempted to check sum with unrecognized argument! Exiting."
        exit 1
        ;;
    esac
}

check_workdir() {
    # Del workimg directory and recreate it every script run.
    if [ ! -d "$WAR_WORKDIR" ]; then
        mkdir -p $WAR_WORKDIR
    fi
}

create_ai_board_override() {
    ! mountpoint -q "$WAR_AI_BOARD_SOURCE" || umount "$WAR_AI_BOARD_SOURCE"
    check_target_sums "ai_board"
    # This runs if the modified file is not found.
    # Then we copy the AIBoard.qml file to our workdir.
    cp $WAR_AI_BOARD_SOURCE "$WAR_WORKDIR/AIBoard.qml"

    # Finally we modify the file.
    sed -i '17 i return' "$WAR_WORKDIR/AIBoard.qml"
}

remove_ai_board() {
    # First we check if the AIBoard.qml file exists on the USB. If it does not we create it.
    if [ $AI_BOARD_ENABLED = true ]; then
        if [ ! -f "$WAR_WORKDIR/AIBoard.qml" ]; then
            echo "AIBoard override file did not exist. Creating one now."
            create_ai_board_override
        else
            echo "AIBoard override file found at $WAR_WORKDIR/AIBoard.qml"
        fi
        # Then we mount --bind the AIBoard.qml override file. This is a non destructive action that can be reset with a reboot or umount.
        mount --bind "$WAR_WORKDIR/AIBoard.qml" "$WAR_AI_BOARD_SOURCE"
    else
        echo "AIBoard block disabled. Reverting changes"
        ! mountpoint -q "$WAR_AI_BOARD_SOURCE" || umount "$WAR_AI_BOARD_SOURCE"
        rm -fr $WAR_WORKDIR/AIBoard.qml
    fi
}

create_recommended_override() {
    ! mountpoint -q "$WAR_RECOMMENDED_SOURCE" || umount "$WAR_RECOMMENDED_SOURCE"
    check_target_sums "recommended"
    # This runs if the modified file is not found.
    # Then we copy the Recommended.qml file to our workdir.
    cp $WAR_AI_BOARD_SOURCE "$WAR_WORKDIR/Recommended.qml"

    # Finally we modify the file.
    sed -i '17 i return' "$WAR_WORKDIR/Recommended.qml"
}

remove_recommended() {
    # First we check if the Recommended.qml file exists on the USB.
    if [ $RECOMMENDED_ENABLED = true ]; then
        if [ ! -f "$WAR_WORKDIR/Recommended.qml" ]; then
            echo "Recommended override file did not exist. Creating one now."
            create_recommended_override
        else
            echo "Recommended override file found at $WAR_WORKDIR/Recommended.qml"
        fi
        # Then we mount --bind the Recommended.qml override file. This is a non destructive action that can be reset with a reboot or umount.
        mount --bind "$WAR_WORKDIR/Recommended.qml" "$WAR_RECOMMENDED_SOURCE"
    else
        echo "Recommended block disabled. Reverting changes"
        ! mountpoint -q "$WAR_RECOMMENDED_SOURCE" || umount "$WAR_RECOMMENDED_SOURCE"
        rm -fr $WAR_WORKDIR/Recommended.qml
    fi


}

init() {
    # Make sure WAR_ENABLED is not set to false
    check_war_enabled
    # Check install
    check_install
    # This is the entrypoint for the script.
    check_workdir
    # Optional. This removes the AI Board (Top bar with 3 boxes. Includes ad, hero banner)
    remove_ai_board
    # Optional. This removes the trending section
    remove_recommended
    # When we are done we kill webOS home. This forces it to restart and use our changes.
    pkill -f com.webos.app.home
}

init
